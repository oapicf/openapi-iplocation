/*
iplocation.net API

OpenAPI v3 specification and a set of generated API clients for iplocation.net

API version: 0.9.0-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Get200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Get200Response{}

// Get200Response struct for Get200Response
type Get200Response struct {
	// IPv4 or IPv6 address used to lookup geolocation.
	Ip *string `json:"ip,omitempty"`
	// IP number in long integer (represented as string).
	IpNumber *string `json:"ip_number,omitempty"`
	// IP version either 4 or 6.
	IpVersion *int32 `json:"ip_version,omitempty"`
	// Full name of the IP country.
	CountryName *string `json:"country_name,omitempty"`
	// ISO ALPHA-2 Country Code.
	CountryCode2 *string `json:"country_code2,omitempty"`
	// Internet Service Provider (ISP) who owns the IP address.
	Isp *string `json:"isp,omitempty"`
	// Response status code to indicate success or failed completion of the API call.
	ResponseCode *string `json:"response_code,omitempty"`
	// Response message to indicate success or failed completion of the API call.
	ResponseMessage *string `json:"response_message,omitempty"`
}

// NewGet200Response instantiates a new Get200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGet200Response() *Get200Response {
	this := Get200Response{}
	return &this
}

// NewGet200ResponseWithDefaults instantiates a new Get200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGet200ResponseWithDefaults() *Get200Response {
	this := Get200Response{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *Get200Response) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *Get200Response) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *Get200Response) SetIp(v string) {
	o.Ip = &v
}

// GetIpNumber returns the IpNumber field value if set, zero value otherwise.
func (o *Get200Response) GetIpNumber() string {
	if o == nil || IsNil(o.IpNumber) {
		var ret string
		return ret
	}
	return *o.IpNumber
}

// GetIpNumberOk returns a tuple with the IpNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetIpNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IpNumber) {
		return nil, false
	}
	return o.IpNumber, true
}

// HasIpNumber returns a boolean if a field has been set.
func (o *Get200Response) HasIpNumber() bool {
	if o != nil && !IsNil(o.IpNumber) {
		return true
	}

	return false
}

// SetIpNumber gets a reference to the given string and assigns it to the IpNumber field.
func (o *Get200Response) SetIpNumber(v string) {
	o.IpNumber = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *Get200Response) GetIpVersion() int32 {
	if o == nil || IsNil(o.IpVersion) {
		var ret int32
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetIpVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.IpVersion) {
		return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *Get200Response) HasIpVersion() bool {
	if o != nil && !IsNil(o.IpVersion) {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given int32 and assigns it to the IpVersion field.
func (o *Get200Response) SetIpVersion(v int32) {
	o.IpVersion = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *Get200Response) GetCountryName() string {
	if o == nil || IsNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetCountryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CountryName) {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *Get200Response) HasCountryName() bool {
	if o != nil && !IsNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *Get200Response) SetCountryName(v string) {
	o.CountryName = &v
}

// GetCountryCode2 returns the CountryCode2 field value if set, zero value otherwise.
func (o *Get200Response) GetCountryCode2() string {
	if o == nil || IsNil(o.CountryCode2) {
		var ret string
		return ret
	}
	return *o.CountryCode2
}

// GetCountryCode2Ok returns a tuple with the CountryCode2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetCountryCode2Ok() (*string, bool) {
	if o == nil || IsNil(o.CountryCode2) {
		return nil, false
	}
	return o.CountryCode2, true
}

// HasCountryCode2 returns a boolean if a field has been set.
func (o *Get200Response) HasCountryCode2() bool {
	if o != nil && !IsNil(o.CountryCode2) {
		return true
	}

	return false
}

// SetCountryCode2 gets a reference to the given string and assigns it to the CountryCode2 field.
func (o *Get200Response) SetCountryCode2(v string) {
	o.CountryCode2 = &v
}

// GetIsp returns the Isp field value if set, zero value otherwise.
func (o *Get200Response) GetIsp() string {
	if o == nil || IsNil(o.Isp) {
		var ret string
		return ret
	}
	return *o.Isp
}

// GetIspOk returns a tuple with the Isp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetIspOk() (*string, bool) {
	if o == nil || IsNil(o.Isp) {
		return nil, false
	}
	return o.Isp, true
}

// HasIsp returns a boolean if a field has been set.
func (o *Get200Response) HasIsp() bool {
	if o != nil && !IsNil(o.Isp) {
		return true
	}

	return false
}

// SetIsp gets a reference to the given string and assigns it to the Isp field.
func (o *Get200Response) SetIsp(v string) {
	o.Isp = &v
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *Get200Response) GetResponseCode() string {
	if o == nil || IsNil(o.ResponseCode) {
		var ret string
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetResponseCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseCode) {
		return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *Get200Response) HasResponseCode() bool {
	if o != nil && !IsNil(o.ResponseCode) {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given string and assigns it to the ResponseCode field.
func (o *Get200Response) SetResponseCode(v string) {
	o.ResponseCode = &v
}

// GetResponseMessage returns the ResponseMessage field value if set, zero value otherwise.
func (o *Get200Response) GetResponseMessage() string {
	if o == nil || IsNil(o.ResponseMessage) {
		var ret string
		return ret
	}
	return *o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Get200Response) GetResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseMessage) {
		return nil, false
	}
	return o.ResponseMessage, true
}

// HasResponseMessage returns a boolean if a field has been set.
func (o *Get200Response) HasResponseMessage() bool {
	if o != nil && !IsNil(o.ResponseMessage) {
		return true
	}

	return false
}

// SetResponseMessage gets a reference to the given string and assigns it to the ResponseMessage field.
func (o *Get200Response) SetResponseMessage(v string) {
	o.ResponseMessage = &v
}

func (o Get200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Get200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.IpNumber) {
		toSerialize["ip_number"] = o.IpNumber
	}
	if !IsNil(o.IpVersion) {
		toSerialize["ip_version"] = o.IpVersion
	}
	if !IsNil(o.CountryName) {
		toSerialize["country_name"] = o.CountryName
	}
	if !IsNil(o.CountryCode2) {
		toSerialize["country_code2"] = o.CountryCode2
	}
	if !IsNil(o.Isp) {
		toSerialize["isp"] = o.Isp
	}
	if !IsNil(o.ResponseCode) {
		toSerialize["response_code"] = o.ResponseCode
	}
	if !IsNil(o.ResponseMessage) {
		toSerialize["response_message"] = o.ResponseMessage
	}
	return toSerialize, nil
}

type NullableGet200Response struct {
	value *Get200Response
	isSet bool
}

func (v NullableGet200Response) Get() *Get200Response {
	return v.value
}

func (v *NullableGet200Response) Set(val *Get200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGet200Response(val *Get200Response) *NullableGet200Response {
	return &NullableGet200Response{value: val, isSet: true}
}

func (v NullableGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


