<?php

/**
 * iplocation.net API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAPI v3 specification and a set of generated API clients for iplocation.net
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\Get200Response;

/**
 * Get200ResponseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\Get200Response
 */
class Get200ResponseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Get200Response"
     */
    public function testGet200Response()
    {
        $testGet200Response = new Get200Response();
        $namespacedClassname = Get200Response::getModelsNamespace() . '\\Get200Response';
        $this->assertSame('\\' . Get200Response::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "ip"
     */
    public function testPropertyIp()
    {
        self::markTestIncomplete(
            'Test of "ip" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "ipNumber"
     */
    public function testPropertyIpNumber()
    {
        self::markTestIncomplete(
            'Test of "ipNumber" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "ipVersion"
     */
    public function testPropertyIpVersion()
    {
        self::markTestIncomplete(
            'Test of "ipVersion" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "countryName"
     */
    public function testPropertyCountryName()
    {
        self::markTestIncomplete(
            'Test of "countryName" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "countryCode2"
     */
    public function testPropertyCountryCode2()
    {
        self::markTestIncomplete(
            'Test of "countryCode2" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isp"
     */
    public function testPropertyIsp()
    {
        self::markTestIncomplete(
            'Test of "isp" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "responseCode"
     */
    public function testPropertyResponseCode()
    {
        self::markTestIncomplete(
            'Test of "responseCode" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "responseMessage"
     */
    public function testPropertyResponseMessage()
    {
        self::markTestIncomplete(
            'Test of "responseMessage" property in "Get200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = Get200Response::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

