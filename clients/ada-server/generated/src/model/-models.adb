--  iplocation.net API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: 0.9.0_pre.0
--  Contact: blah@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.3.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.


package body .Models is
   pragma Style_Checks ("-mr");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;



   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Get400Response_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "response_code", Value.Response_Code);
      Serialize (Into, "response_message", Value.Response_Message);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Get400Response_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Get400Response_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "response_code", Value.Response_Code);
      Deserialize (Object, "response_message", Value.Response_Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Get400Response_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Get400Response_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Get200Response_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "ip", Value.Ip);
      Serialize (Into, "ip_number", Value.Ip_Number);
      Serialize (Into, "ip_version", Value.Ip_Version);
      Serialize (Into, "country_name", Value.Country_Name);
      Serialize (Into, "country_code2", Value.Country_Code_2);
      Serialize (Into, "isp", Value.Isp);
      Serialize (Into, "response_code", Value.Response_Code);
      Serialize (Into, "response_message", Value.Response_Message);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Get200Response_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Get200Response_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "ip", Value.Ip);
      Deserialize (Object, "ip_number", Value.Ip_Number);
      Deserialize (Object, "ip_version", Value.Ip_Version);
      Deserialize (Object, "country_name", Value.Country_Name);
      Deserialize (Object, "country_code2", Value.Country_Code_2);
      Deserialize (Object, "isp", Value.Isp);
      Deserialize (Object, "response_code", Value.Response_Code);
      Deserialize (Object, "response_message", Value.Response_Message);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Get200Response_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Get200Response_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;



end .Models;
