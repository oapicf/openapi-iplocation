/*
 * iplocation.net API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.9.0-pre.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Get200Response struct {

	// IPv4 or IPv6 address used to lookup geolocation.
	Ip *interface{} `json:"ip,omitempty"`

	// IP number in long integer.
	IpNumber *interface{} `json:"ip_number,omitempty"`

	// IP version either 4 or 6.
	IpVersion *interface{} `json:"ip_version,omitempty"`

	// Full name of the IP country.
	CountryName *interface{} `json:"country_name,omitempty"`

	// ISO ALPHA-2 Country Code.
	CountryCode2 *interface{} `json:"country_code2,omitempty"`

	// Internet Service Provider (ISP) who owns the IP address.
	Isp *interface{} `json:"isp,omitempty"`

	// Response status code to indicate success or failed completion of the API call.
	ResponseCode *interface{} `json:"response_code,omitempty"`

	// Response message to indicate success or failed completion of the API call.
	ResponseMessage *interface{} `json:"response_message,omitempty"`
}

// AssertGet200ResponseRequired checks if the required fields are not zero-ed
func AssertGet200ResponseRequired(obj Get200Response) error {
	return nil
}

// AssertRecurseGet200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Get200Response (e.g. [][]Get200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGet200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGet200Response, ok := obj.(Get200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGet200ResponseRequired(aGet200Response)
	})
}
