/*
 * iplocation.net API
 * OpenAPI v3 specification and a set of generated API clients for iplocation.net
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASGet200Response
 */
public class OASGet200Response implements OAS.MappedProperties {
    /**
     * IPv4 or IPv6 address used to lookup geolocation.
     * @return ip
     */
    public String ip { get; set; }

    /**
     * IP number in long integer (represented as string).
     * @return ipNumber
     */
    public String ipNumber { get; set; }

    /**
     * IP version either 4 or 6.
     * @return ipVersion
     */
    public Integer ipVersion { get; set; }

    /**
     * Full name of the IP country.
     * @return countryName
     */
    public String countryName { get; set; }

    /**
     * ISO ALPHA-2 Country Code.
     * @return countryCode2
     */
    public String countryCode2 { get; set; }

    /**
     * Internet Service Provider (ISP) who owns the IP address.
     * @return isp
     */
    public String isp { get; set; }

    /**
     * Response status code to indicate success or failed completion of the API call.
     * @return responseCode
     */
    public String responseCode { get; set; }

    /**
     * Response message to indicate success or failed completion of the API call.
     * @return responseMessage
     */
    public String responseMessage { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ip_number' => 'ipNumber',
        'ip_version' => 'ipVersion',
        'country_name' => 'countryName',
        'country_code2' => 'countryCode2',
        'response_code' => 'responseCode',
        'response_message' => 'responseMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASGet200Response getExample() {
        OASGet200Response get200Response = new OASGet200Response();
          get200Response.ip = '';
          get200Response.ipNumber = '';
          get200Response.ipVersion = 0;
          get200Response.countryName = '';
          get200Response.countryCode2 = '';
          get200Response.isp = '';
          get200Response.responseCode = '';
          get200Response.responseMessage = '';
        return get200Response;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGet200Response) {           
            OASGet200Response get200Response = (OASGet200Response) obj;
            return this.ip == get200Response.ip
                && this.ipNumber == get200Response.ipNumber
                && this.ipVersion == get200Response.ipVersion
                && this.countryName == get200Response.countryName
                && this.countryCode2 == get200Response.countryCode2
                && this.isp == get200Response.isp
                && this.responseCode == get200Response.responseCode
                && this.responseMessage == get200Response.responseMessage;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ip == null ? 0 : System.hashCode(ip));
        hashCode = (17 * hashCode) + (ipNumber == null ? 0 : System.hashCode(ipNumber));
        hashCode = (17 * hashCode) + (ipVersion == null ? 0 : System.hashCode(ipVersion));
        hashCode = (17 * hashCode) + (countryName == null ? 0 : System.hashCode(countryName));
        hashCode = (17 * hashCode) + (countryCode2 == null ? 0 : System.hashCode(countryCode2));
        hashCode = (17 * hashCode) + (isp == null ? 0 : System.hashCode(isp));
        hashCode = (17 * hashCode) + (responseCode == null ? 0 : System.hashCode(responseCode));
        hashCode = (17 * hashCode) + (responseMessage == null ? 0 : System.hashCode(responseMessage));
        return hashCode;
    }
}

