<?php
/**
 * Get200Response
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * iplocation.net API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Get200Response model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Get200Response 
{
        /**
     * IPv4 or IPv6 address used to lookup geolocation.
     *
     * @var 
     * @SerializedName("ip")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $ip = null;

    /**
     * IP number in long integer.
     *
     * @var 
     * @SerializedName("ip_number")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $ipNumber = null;

    /**
     * IP version either 4 or 6.
     *
     * @var 
     * @SerializedName("ip_version")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $ipVersion = null;

    /**
     * Full name of the IP country.
     *
     * @var 
     * @SerializedName("country_name")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $countryName = null;

    /**
     * ISO ALPHA-2 Country Code.
     *
     * @var 
     * @SerializedName("country_code2")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $countryCode2 = null;

    /**
     * Internet Service Provider (ISP) who owns the IP address.
     *
     * @var 
     * @SerializedName("isp")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $isp = null;

    /**
     * Response status code to indicate success or failed completion of the API call.
     *
     * @var 
     * @SerializedName("response_code")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $responseCode = null;

    /**
     * Response message to indicate success or failed completion of the API call.
     *
     * @var 
     * @SerializedName("response_message")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected  $responseMessage = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->ip = $data['ip'] ?? null;
        $this->ipNumber = $data['ipNumber'] ?? null;
        $this->ipVersion = $data['ipVersion'] ?? null;
        $this->countryName = $data['countryName'] ?? null;
        $this->countryCode2 = $data['countryCode2'] ?? null;
        $this->isp = $data['isp'] ?? null;
        $this->responseCode = $data['responseCode'] ?? null;
        $this->responseMessage = $data['responseMessage'] ?? null;
    }

    /**
     * Gets ip.
     *
     * @return 
     */
    public function getIp(): 
    {
        return $this->ip;
    }

    /**
     * Sets ip.
     *
     * @param  $ip  IPv4 or IPv6 address used to lookup geolocation.
     *
     * @return $this
     */
    public function setIp( $ip = null): self
    {
        $this->ip = $ip;

        return $this;
    }

    /**
     * Gets ipNumber.
     *
     * @return 
     */
    public function getIpNumber(): 
    {
        return $this->ipNumber;
    }

    /**
     * Sets ipNumber.
     *
     * @param  $ipNumber  IP number in long integer.
     *
     * @return $this
     */
    public function setIpNumber( $ipNumber = null): self
    {
        $this->ipNumber = $ipNumber;

        return $this;
    }

    /**
     * Gets ipVersion.
     *
     * @return 
     */
    public function getIpVersion(): 
    {
        return $this->ipVersion;
    }

    /**
     * Sets ipVersion.
     *
     * @param  $ipVersion  IP version either 4 or 6.
     *
     * @return $this
     */
    public function setIpVersion( $ipVersion = null): self
    {
        $this->ipVersion = $ipVersion;

        return $this;
    }

    /**
     * Gets countryName.
     *
     * @return 
     */
    public function getCountryName(): 
    {
        return $this->countryName;
    }

    /**
     * Sets countryName.
     *
     * @param  $countryName  Full name of the IP country.
     *
     * @return $this
     */
    public function setCountryName( $countryName = null): self
    {
        $this->countryName = $countryName;

        return $this;
    }

    /**
     * Gets countryCode2.
     *
     * @return 
     */
    public function getCountryCode2(): 
    {
        return $this->countryCode2;
    }

    /**
     * Sets countryCode2.
     *
     * @param  $countryCode2  ISO ALPHA-2 Country Code.
     *
     * @return $this
     */
    public function setCountryCode2( $countryCode2 = null): self
    {
        $this->countryCode2 = $countryCode2;

        return $this;
    }

    /**
     * Gets isp.
     *
     * @return 
     */
    public function getIsp(): 
    {
        return $this->isp;
    }

    /**
     * Sets isp.
     *
     * @param  $isp  Internet Service Provider (ISP) who owns the IP address.
     *
     * @return $this
     */
    public function setIsp( $isp = null): self
    {
        $this->isp = $isp;

        return $this;
    }

    /**
     * Gets responseCode.
     *
     * @return 
     */
    public function getResponseCode(): 
    {
        return $this->responseCode;
    }

    /**
     * Sets responseCode.
     *
     * @param  $responseCode  Response status code to indicate success or failed completion of the API call.
     *
     * @return $this
     */
    public function setResponseCode( $responseCode = null): self
    {
        $this->responseCode = $responseCode;

        return $this;
    }

    /**
     * Gets responseMessage.
     *
     * @return 
     */
    public function getResponseMessage(): 
    {
        return $this->responseMessage;
    }

    /**
     * Sets responseMessage.
     *
     * @param  $responseMessage  Response message to indicate success or failed completion of the API call.
     *
     * @return $this
     */
    public function setResponseMessage( $responseMessage = null): self
    {
        $this->responseMessage = $responseMessage;

        return $this;
    }
}


