<?php
/**
 * Get400Response
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * iplocation.net API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Get400Response model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Get400Response 
{
        /**
     * Response status code to indicate success or failed completion of the API call.
     *
     * @var string|null
     * @SerializedName("response_code")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $responseCode = null;

    /**
     * Response message to indicate success or failed completion of the API call.
     *
     * @var string|null
     * @SerializedName("response_message")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $responseMessage = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->responseCode = array_key_exists('responseCode', $data) ? $data['responseCode'] : $this->responseCode;
            $this->responseMessage = array_key_exists('responseMessage', $data) ? $data['responseMessage'] : $this->responseMessage;
        }
    }

    /**
     * Gets responseCode.
     *
     * @return string|null
     */
    public function getResponseCode(): ?string
    {
        return $this->responseCode;
    }



    /**
     * Sets responseCode.
     *
     * @param string|null $responseCode  Response status code to indicate success or failed completion of the API call.
     *
     * @return $this
     */
    public function setResponseCode(?string $responseCode = null): self
    {
        $this->responseCode = $responseCode;

        return $this;
    }

    /**
     * Gets responseMessage.
     *
     * @return string|null
     */
    public function getResponseMessage(): ?string
    {
        return $this->responseMessage;
    }



    /**
     * Sets responseMessage.
     *
     * @param string|null $responseMessage  Response message to indicate success or failed completion of the API call.
     *
     * @return $this
     */
    public function setResponseMessage(?string $responseMessage = null): self
    {
        $this->responseMessage = $responseMessage;

        return $this;
    }
}


