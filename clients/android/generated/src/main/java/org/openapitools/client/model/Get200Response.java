/**
 * iplocation.net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.OasAnyTypeNotMapped;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Get200Response {
  
  @SerializedName("ip")
  private OasAnyTypeNotMapped ip = null;
  @SerializedName("ip_number")
  private OasAnyTypeNotMapped ipNumber = null;
  @SerializedName("ip_version")
  private OasAnyTypeNotMapped ipVersion = null;
  @SerializedName("country_name")
  private OasAnyTypeNotMapped countryName = null;
  @SerializedName("country_code2")
  private OasAnyTypeNotMapped countryCode2 = null;
  @SerializedName("isp")
  private OasAnyTypeNotMapped isp = null;
  @SerializedName("response_code")
  private OasAnyTypeNotMapped responseCode = null;
  @SerializedName("response_message")
  private OasAnyTypeNotMapped responseMessage = null;

  /**
   * IPv4 or IPv6 address used to lookup geolocation.
   **/
  @ApiModelProperty(value = "IPv4 or IPv6 address used to lookup geolocation.")
  public OasAnyTypeNotMapped getIp() {
    return ip;
  }
  public void setIp(OasAnyTypeNotMapped ip) {
    this.ip = ip;
  }

  /**
   * IP number in long integer.
   **/
  @ApiModelProperty(value = "IP number in long integer.")
  public OasAnyTypeNotMapped getIpNumber() {
    return ipNumber;
  }
  public void setIpNumber(OasAnyTypeNotMapped ipNumber) {
    this.ipNumber = ipNumber;
  }

  /**
   * IP version either 4 or 6.
   **/
  @ApiModelProperty(value = "IP version either 4 or 6.")
  public OasAnyTypeNotMapped getIpVersion() {
    return ipVersion;
  }
  public void setIpVersion(OasAnyTypeNotMapped ipVersion) {
    this.ipVersion = ipVersion;
  }

  /**
   * Full name of the IP country.
   **/
  @ApiModelProperty(value = "Full name of the IP country.")
  public OasAnyTypeNotMapped getCountryName() {
    return countryName;
  }
  public void setCountryName(OasAnyTypeNotMapped countryName) {
    this.countryName = countryName;
  }

  /**
   * ISO ALPHA-2 Country Code.
   **/
  @ApiModelProperty(value = "ISO ALPHA-2 Country Code.")
  public OasAnyTypeNotMapped getCountryCode2() {
    return countryCode2;
  }
  public void setCountryCode2(OasAnyTypeNotMapped countryCode2) {
    this.countryCode2 = countryCode2;
  }

  /**
   * Internet Service Provider (ISP) who owns the IP address.
   **/
  @ApiModelProperty(value = "Internet Service Provider (ISP) who owns the IP address.")
  public OasAnyTypeNotMapped getIsp() {
    return isp;
  }
  public void setIsp(OasAnyTypeNotMapped isp) {
    this.isp = isp;
  }

  /**
   * Response status code to indicate success or failed completion of the API call.
   **/
  @ApiModelProperty(value = "Response status code to indicate success or failed completion of the API call.")
  public OasAnyTypeNotMapped getResponseCode() {
    return responseCode;
  }
  public void setResponseCode(OasAnyTypeNotMapped responseCode) {
    this.responseCode = responseCode;
  }

  /**
   * Response message to indicate success or failed completion of the API call.
   **/
  @ApiModelProperty(value = "Response message to indicate success or failed completion of the API call.")
  public OasAnyTypeNotMapped getResponseMessage() {
    return responseMessage;
  }
  public void setResponseMessage(OasAnyTypeNotMapped responseMessage) {
    this.responseMessage = responseMessage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Get200Response get200Response = (Get200Response) o;
    return (this.ip == null ? get200Response.ip == null : this.ip.equals(get200Response.ip)) &&
        (this.ipNumber == null ? get200Response.ipNumber == null : this.ipNumber.equals(get200Response.ipNumber)) &&
        (this.ipVersion == null ? get200Response.ipVersion == null : this.ipVersion.equals(get200Response.ipVersion)) &&
        (this.countryName == null ? get200Response.countryName == null : this.countryName.equals(get200Response.countryName)) &&
        (this.countryCode2 == null ? get200Response.countryCode2 == null : this.countryCode2.equals(get200Response.countryCode2)) &&
        (this.isp == null ? get200Response.isp == null : this.isp.equals(get200Response.isp)) &&
        (this.responseCode == null ? get200Response.responseCode == null : this.responseCode.equals(get200Response.responseCode)) &&
        (this.responseMessage == null ? get200Response.responseMessage == null : this.responseMessage.equals(get200Response.responseMessage));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ip == null ? 0: this.ip.hashCode());
    result = 31 * result + (this.ipNumber == null ? 0: this.ipNumber.hashCode());
    result = 31 * result + (this.ipVersion == null ? 0: this.ipVersion.hashCode());
    result = 31 * result + (this.countryName == null ? 0: this.countryName.hashCode());
    result = 31 * result + (this.countryCode2 == null ? 0: this.countryCode2.hashCode());
    result = 31 * result + (this.isp == null ? 0: this.isp.hashCode());
    result = 31 * result + (this.responseCode == null ? 0: this.responseCode.hashCode());
    result = 31 * result + (this.responseMessage == null ? 0: this.responseMessage.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Get200Response {\n");
    
    sb.append("  ip: ").append(ip).append("\n");
    sb.append("  ipNumber: ").append(ipNumber).append("\n");
    sb.append("  ipVersion: ").append(ipVersion).append("\n");
    sb.append("  countryName: ").append(countryName).append("\n");
    sb.append("  countryCode2: ").append(countryCode2).append("\n");
    sb.append("  isp: ").append(isp).append("\n");
    sb.append("  responseCode: ").append(responseCode).append("\n");
    sb.append("  responseMessage: ").append(responseMessage).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
