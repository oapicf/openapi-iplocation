"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server Get200Response"
package     = openapi_server
version     = "1.0"
description = "Defines a Get200Response"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
}
resourceTypes {

  Get200Response {
    title = Get200Response
    description = Get200Response
    derivedFrom = Root
    properties {
        ip {
          type =  string
          description = "IPv4 or IPv6 address used to lookup geolocation."
          optional = false
        }
        ip_number {
          type =  string
          description = "IP number in long integer (represented as string)."
          optional = false
        }
        ip_version {
          type =  integer
          description = "IP version either 4 or 6."
          optional = false
        }
        country_name {
          type =  string
          description = "Full name of the IP country."
          optional = false
        }
        country_code2 {
          type =  string
          description = "ISO ALPHA-2 Country Code."
          optional = false
        }
        isp {
          type =  string
          description = "Internet Service Provider (ISP) who owns the IP address."
          optional = false
        }
        response_code {
          type =  string
          description = "Response status code to indicate success or failed completion of the API call."
          optional = false
        }
        response_message {
          type =  string
          description = "Response message to indicate success or failed completion of the API call."
          optional = false
        }
    }
  }
}

serviceTemplates {

  Get200Response {
    title = Get200Response
    description = Get200Response
    implements = openapi_server.resourceTypes.Get200Response

  }
}
