/**
 * iplocation.net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.9.0-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIDefaultApi.h"

#include "OpenAPIGet200Response.h"
#include "OpenAPIGet400Response.h"

namespace OpenAPI
{

/* Get geolocation of an IP address
 *
 * Retrieve geolocation of an IP address. 
*/
class OPENAPI_API OpenAPIDefaultApi::RootGetRequest : public Request
{
public:
    virtual ~RootGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* An IPv4 or IPv6 address that you would like to lookup. */
	TSharedPtr<FJsonValue> Ip;
	/* Output format, the following formats are supported: plain xml json jsonp php csv serialized */
	TOptional<TSharedPtr<FJsonValue>> Format;
	/* Delimiter between proxies. Can be used only with format plain. The following types are supported: 1 for \"\\n\", 2 for \"<br>\". */
	TOptional<TSharedPtr<FJsonValue>> Delimiter;
};

class OPENAPI_API OpenAPIDefaultApi::RootGetResponse : public Response
{
public:
    virtual ~RootGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGet200Response Content;
};

}
